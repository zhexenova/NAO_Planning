# Choregraphe bezier export in Python.
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.514872, [3, -0.833333, 0], [3, 0.333333, 0]], [0.514872, [3, -0.333333, 0], [3, 0.333333, 0]], [0.514872, [3, -0.333333, 0], [3, 0.333333, 0]], [0.514872, [3, -0.333333, 0], [3, 0.333333, 0]], [0.514872, [3, -0.333333, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0, [3, -0.833333, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.09, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.0610865, [3, -0.333333, 0], [3, 0.333333, 0]], [0.09, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0610865, [3, -0.333333, 0], [3, 0.333333, 0]], [0.09, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.13, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.13, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.421764, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.421764, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.421764, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.421764, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.421764, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-1.2041, [3, -0.833333, 0], [3, 0.333333, 0]], [-1.2041, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.2041, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.2041, [3, -0.333333, 0], [3, 0.333333, 0]], [-1.2041, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LHand")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.23, [3, -0.833333, 0], [3, 0.333333, 0]], [0.23, [3, -0.333333, 0], [3, 0.333333, 0]], [0.23, [3, -0.333333, 0], [3, 0.333333, 0]], [0.23, [3, -0.333333, 0], [3, 0.333333, 0]], [0.23, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.13, [3, -0.833333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.1, [3, -0.833333, 0], [3, 0.333333, 0]], [0.1, [3, -0.333333, 0], [3, 0.333333, 0]], [0.1, [3, -0.333333, 0], [3, 0.333333, 0]], [0.1, [3, -0.333333, 0], [3, 0.333333, 0]], [0.1, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.17, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.0923279, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.0923279, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0923279, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0923279, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0923279, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[1.57417, [3, -0.833333, 0], [3, 0.333333, 0]], [1.19381, [3, -0.333333, 0], [3, 0.333333, 0]], [1.57417, [3, -0.333333, 0], [3, 0.333333, 0]], [1.19381, [3, -0.333333, 0], [3, 0.333333, 0]], [1.57417, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.205818, [3, -0.833333, 0], [3, 0.333333, 0]], [0.205818, [3, -0.333333, 0], [3, 0.333333, 0]], [0.205818, [3, -0.333333, 0], [3, 0.333333, 0]], [0.205818, [3, -0.333333, 0], [3, 0.333333, 0]], [0.205818, [3, -0.333333, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.0994838, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.0994838, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0994838, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0994838, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0994838, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.09, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.0610865, [3, -0.333333, 0], [3, 0.333333, 0]], [0.09, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0610865, [3, -0.333333, 0], [3, 0.333333, 0]], [0.09, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.13, [3, -0.833333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.421764, [3, -0.833333, 0], [3, 0.333333, 0]], [0.421764, [3, -0.333333, 0], [3, 0.333333, 0]], [0.421764, [3, -0.333333, 0], [3, 0.333333, 0]], [0.421764, [3, -0.333333, 0], [3, 0.333333, 0]], [0.421764, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[1.2041, [3, -0.833333, 0], [3, 0.333333, 0]], [1.2041, [3, -0.333333, 0], [3, 0.333333, 0]], [1.2041, [3, -0.333333, 0], [3, 0.333333, 0]], [1.2041, [3, -0.333333, 0], [3, 0.333333, 0]], [1.2041, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RHand")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.23, [3, -0.833333, 0], [3, 0.333333, 0]], [0.23, [3, -0.333333, 0], [3, 0.333333, 0]], [0.23, [3, -0.333333, 0], [3, 0.333333, 0]], [0.23, [3, -0.333333, 0], [3, 0.333333, 0]], [0.23, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.13, [3, -0.833333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.1, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.1, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.1, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.1, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.1, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.17, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.0923279, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.0923279, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0923279, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0923279, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.0923279, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[1.57417, [3, -0.833333, 0], [3, 0.333333, 0]], [1.19381, [3, -0.333333, 0], [3, 0.333333, 0]], [1.57417, [3, -0.333333, 0], [3, 0.333333, 0]], [1.19381, [3, -0.333333, 0], [3, 0.333333, 0]], [1.57417, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[-0.205818, [3, -0.833333, 0], [3, 0.333333, 0]], [-0.205818, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.205818, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.205818, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.205818, [3, -0.333333, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([2.5, 3.5, 4.5, 5.5, 6.5])
keys.append([[0.0994838, [3, -0.833333, 0], [3, 0.333333, 0]], [0.0994838, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0994838, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0994838, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0994838, [3, -0.333333, 0], [3, 0, 0]]])